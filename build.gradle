buildscript {
	ext {
		springBootPluginVersion = '3.1.0'
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootPluginVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
if (!DEVELOP_MODE.toBoolean()) {
	apply plugin: 'war'
}

group = 'com.app.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
	implementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
	implementation("org.springframework.session:spring-session:1.3.1.RELEASE")
	implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
	implementation("org.projectlombok:lombok:1.16.18")
	implementation("org.jsoup:jsoup:1.9.2")
	implementation("cn.jpush.api:jpush-client:3.3.5")
	implementation("mysql:mysql-connector-java:5.1.44")
	testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	if (!DEVELOP_MODE.toBoolean()) {
		providedRuntime("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")
	}
}
